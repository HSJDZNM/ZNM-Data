# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import random
from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from PyQt5.QtWidgets import QApplication, QMainWindow


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(600, 600)
        self.label_title = QtWidgets.QLabel(Form)
        self.label_title.setGeometry(QtCore.QRect(30, 30, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label_title.setFont(font)
        self.label_title.setObjectName("label_title")
        self.label_arithmetic = QtWidgets.QLabel(Form)
        self.label_arithmetic.setGeometry(QtCore.QRect(30, 90, 491, 71))
        font = QtGui.QFont()
        font.setPointSize(40)
        self.label_arithmetic.setFont(font)
        self.label_arithmetic.setAlignment(QtCore.Qt.AlignCenter)
        self.label_arithmetic.setObjectName("label_arithmetic")
        self.label_record = QtWidgets.QLabel(Form)
        self.label_record.setGeometry(QtCore.QRect(254, 31, 241, 41))
        font = QtGui.QFont()
        font.setPointSize(15)
        font.setBold(True)
        font.setWeight(75)
        self.label_record.setFont(font)
        self.label_record.setAlignment(QtCore.Qt.AlignCenter)
        self.label_record.setObjectName("label_record")
        self.lineEdit_input = QtWidgets.QLineEdit(Form)
        self.lineEdit_input.setGeometry(QtCore.QRect(170, 250, 191, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit_input.setFont(font)
        self.lineEdit_input.setCursor(QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.lineEdit_input.setObjectName("lineEdit_input")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(180, 190, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.pushButton_start = QtWidgets.QPushButton(Form)
        self.pushButton_start.setGeometry(QtCore.QRect(430, 330, 71, 21))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_start.setFont(font)
        self.pushButton_start.setObjectName("pushButton_start")
        self.pushButton_start.clicked.connect(self.do_homework(10))

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label_title.setText(_translate("Form", "<html><head/><body><p><span style=\" "
                                                    "font-weight:600;\">题目:</span></p></body></html>"))
        self.label_arithmetic.setText(_translate("Form", "<html><head/><body><p>式子</p></body></html>"))
        self.label_record.setText(_translate("Form", "计数"))
        self.lineEdit_input.setText(_translate("Form", ""))
        self.label.setText(_translate("Form", "状态"))
        self.pushButton_start.setText(_translate("Form", "开始"))

    def do_homework(self, count_max):
        def generate_question():
            self.num1 = random.randint(0, 20)
            self.num2 = random.randint(0, 20)
            self.op = random.choice(['+', '-', '*', '/'])
            if self.op == '-':
                if self.num1 < self.num2:
                    self.num1, self.num2 = self.num2, self.num1
            elif self.op == '/':
                if self.num1 == 0:
                    self.num1, self.num2 = self.num2, self.num1
            return self.num1, self.op, self.num2

        def check_answer(num1, op, num2, answer):
            if op == '+':
                if num1 + num2 == answer:
                    return True
            elif op == '/':
                if num1 / num2 == answer:
                    return True
            elif op == '*':
                if num1 * num2 == answer:
                    return True
            else:
                if num1 - num2 == answer:
                    return True
            return False

        count_right = 0
        count = 0
        count_wrong = 0
        while count_right < count_max:
            count += 1
            num1, op, num2 = generate_question()
            # print(f"第{count}题: {num1} {op} {num2} = ", end="")
            self.label_arithmetic.setText(f"第{count}题: {num1} {op} {num2} = ")
            answer = self.lineEdit_input.text().strip()
            try:
                answer = int(answer)
            except:
                # print("请输入整数！")
                self.label.setText("请输入整数！")
                continue
            if not check_answer(num1, op, num2, answer):
                # print("很遗憾，答错了！")
                self.label.setText("很遗憾，答错了！")
                count_wrong += 1
                if count_wrong == 5:
                    # print(f"答错五次,答案是{num1}{op}{num2}={answer}")
                    self.label_arithmetic.setText(f"答错五次,答案是{num1}{op}{num2}={answer}")
                    break
            else:
                # print("恭喜你，答对了！")
                self.label.setText("恭喜你，答对了！")
                count_right += 1
        # print(f"共{count}题，你答对了{count_right}题！")
        self.label_record.setText(f"共{count}题，你答对了{count_right}题！")


class MyWindow(QMainWindow, Ui_Form):
    def __init__(self, parent=None):
        super(MyWindow, self).__init__(parent)
        self.setupUi(self)


if __name__ == '__main__':
    app = QApplication(sys.argv)
    myWin = MyWindow()
    myWin.show()
    sys.exit(app.exec_())
